class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int i = 0; 
        int j = 0;
        int k = 0;
        double res = 0.0;
        int length = nums1.length+nums2.length;
        int[] a = new int[length];
        int mid_index = 0;
        while(i < nums1.length && j < nums2.length)
        {
            if(nums1[i] > nums2[j])
            {
                a[k] = nums2[j];
                j++;
            }
            else if(nums1[i] < nums2[j])
            {
                a[k] = nums1[i];
                i++;
            }
            else
            {
                a[k++] = nums1[i];
                a[k] = nums2[j];
                i++;
                j++;
            }
            k++;
        }
        if(i != nums1.length)
        {
            while(i != nums1.length)
            {
                a[k] = nums1[i];
                i++;
                k++;
            }
        }
        if(j != nums2.length)
        {
            while(j != nums2.length)
            {
                a[k] = nums2[j];
                j++;
                k++;
            }
        }
        mid_index =  length > 0 ? length / 2 : -1;
        if(mid_index >=0 && length % 2 == 0)
        {
            res = (double)(a[mid_index-1]+a[mid_index])/2;
            return res;
        }
        else
        {
            if(mid_index >= 0)
            {
                res = (double)a[mid_index];
                return res;
            }
                
        }
       
        return -1;
        
    }
}
