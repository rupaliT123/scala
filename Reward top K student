class Solution {
    public List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] report, int[] student_id, int k) {
        Set<String> pos_list = new HashSet<>( Arrays.asList(positive_feedback)); 
        Set<String> neg_list = new HashSet<>(Arrays.asList(negative_feedback)); 
        Map<Integer,Integer> map =  new HashMap<>();
        for(int i = 0; i < student_id.length; i++)
        {
            String[] str = report[i].split(" ");
            int score = 0;
            for(int j = 0; j < str.length; j++)
            {
                if(pos_list.contains(str[j]))
                {
                    score += 3;
                }
                else if(neg_list.contains(str[j]))
                {
                    score -= 1;
                }
            }
            map.put(student_id[i],map.getOrDefault(student_id[i]
                    ,0)+score);
        }
         List<Integer> sortedIds = new ArrayList<>(map.keySet());
        Collections.sort(sortedIds, (a, b) -> map.get(a).equals(map.get(b)) ? a - b : map.get(b) - map.get(a));
        
        return sortedIds.subList(0, k);

        
    }
}
